if (name.endsWith(".tests")) {
  sourceSets {
    main {
      java.srcDirs = []
      resources.srcDirs = []
    }
    test {
      java.srcDirs = ['src', 'src-gen', 'xtend-gen']
      resources.srcDirs = ['src', 'src-gen']
      xtend.outputDir = 'xtend-gen'
    }
  }
} else {
  sourceSets {
    main {
      java.srcDirs = ['src', 'src-gen', 'xtend-gen']
      resources.srcDirs = ['src', 'src-gen']
      xtend.outputDir = 'xtend-gen'
    }
    test {
      java.srcDirs = []
      resources.srcDirs = []
    }
  }
}

sourceSets.all {
  resources.exclude '**/*.g', '**/*.mwe2', '**/*.xtend', '**/*._trace'
}

tasks.configureEach { task ->
  if (task.name == 'processResources' && tasks.findByName('generateXtextLanguage') != null) {
    task.dependsOn tasks.named('generateXtextLanguage')
  }
}

jar {
  from('model') {
    into('model')
  }
  manifest {
    attributes 'Bundle-SymbolicName': project.name
  }
}

plugins.withId('war') {
  webAppDirName = "WebRoot"
}

plugins.withId('org.xtext.idea-plugin') {
  assembleSandbox.metaInf.from('META-INF')
}
